CREATE TABLE IF NOT EXISTS `user` (
    id UUID NOT NULL PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    picture VARCHAR(255) NOT NULL,
    active BOOL NOT NULL DEFAULT 1
);


CREATE TABLE IF NOT EXISTS person (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
CREATE TABLE IF NOT EXISTS child (
    id INT UNSIGNED NOT NULL PRIMARY KEY,
    parent_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (id) REFERENCES person(id),
    FOREIGN KEY (parent_id) REFERENCES person(id)
);


CREATE TABLE IF NOT EXISTS `case` (
    id INT UNSIGNED NOT NULL PRIMARY KEY,
    state ENUM('RECOMMENDATION_PENDING', 'PARENT_OUTREACH', 'PAYMENT_PENDING', 'REPORT_PENDING', 'LOGBOOK_PENDING') NOT NULL DEFAULT 'RECOMMENDATION_PENDING',
    closed BOOL NOT NULL DEFAULT 0,
    FOREIGN KEY (id) REFERENCES child(id)
);
CREATE TABLE IF NOT EXISTS file (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    case_id INT UNSIGNED NOT NULL,
    name VARCHAR(255) NOT NULL,
    extension VARCHAR(255) NOT NULL,
    data LONGBLOB NOT NULL,
    description VARCHAR(255),
    FOREIGN KEY (case_id) REFERENCES `case`(id)
);
CREATE TABLE IF NOT EXISTS comment (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    case_id INT UNSIGNED NOT NULL,
    content VARCHAR(255) NOT NULL,
    FOREIGN KEY (case_id) REFERENCES `case`(id)
);


CREATE TABLE IF NOT EXISTS `role` (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);
CREATE TABLE IF NOT EXISTS comment_permission (
    comment_id INT UNSIGNED NOT NULL,
    role_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (comment_id) REFERENCES comment(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES `role`(id),
    PRIMARY KEY (comment_id, role_id)
);
CREATE TABLE IF NOT EXISTS file_permission (
    file_id INT UNSIGNED NOT NULL,
    role_id INT UNSIGNED NOT NULL,
    FOREIGN KEY (file_id) REFERENCES file(id) ON DELETE CASCADE,
    FOREIGN KEY (role_id) REFERENCES `role`(id),
    PRIMARY KEY (file_id, role_id)
);